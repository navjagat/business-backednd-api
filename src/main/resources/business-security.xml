<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:google="http://www.springframework.org/schema/social/google"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
    	http://www.springframework.org/schema/social/google http://www.springframework.org/schema/social/spring-social-google.xsd 
     	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<sec:http use-expressions="true" entry-point-ref="authEntryPoint"
		create-session="always">
		<sec:headers disabled="true"/>
		<sec:csrf token-repository-ref="tokenRepository" disabled="true" />
		<sec:intercept-url pattern="/authentication/logout"
			access="permitAll" />
		<sec:intercept-url pattern="/authentication/login"
			access="permitAll" />
		<sec:intercept-url pattern="/auth/**" access="permitAll" />
		<sec:intercept-url pattern="/signin" access="permitAll"/>
		<sec:intercept-url pattern="/user/register" access="permitAll"/>
		<sec:intercept-url pattern="/authentication" access="authenticated" />
		<sec:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<sec:access-denied-handler ref="accessDeniedHandler" />
		<sec:custom-filter ref="csrfTokenFilter" after="CHANNEL_FILTER" />
		<sec:form-login login-processing-url="/authentication/login"
			username-parameter="username" password-parameter="password"
			authentication-success-handler-ref="authSuccessHandler"
			authentication-failure-handler-ref="authFailureHandler" />
		<sec:logout invalidate-session="true" delete-cookies="JSESSIONID"
			logout-url="/authentication/logout" success-handler-ref="logoutSuccessHandler" />
		<sec:custom-filter ref="socialAuthenticationFilter"
			before="PRE_AUTH_FILTER" />
	</sec:http>

	<sec:authentication-manager id="authenticationManager">
		<sec:authentication-provider
			user-service-ref="userService">
			<sec:password-encoder ref="myEncoder" />
		</sec:authentication-provider>

		<sec:authentication-provider ref="socialAuthenticationProvider" />
	</sec:authentication-manager>

	<bean id="myEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"
		c:_0="6" />

	<!-- <bean id="authFilter" class="com.interview.secessentials.AuthenticationFilter" 
		c:_0-ref="authenticationManager" p:authenticationSuccessHandler-ref="authSuccessHandler" 
		p:authenticationFailureHandler-ref="authFailureHandler"/> -->

	<bean id="authEntryPoint" class="com.interview.secessentials.AuthEntryPointHandler" />

	<bean id="authSuccessHandler" class="com.interview.secessentials.AuthSuccessHandler" p:redirectUrl="${social.redirect}" />

	<bean id="authFailureHandler" class="com.interview.secessentials.AuthFailureHandler" />

	<bean id="accessDeniedHandler" class="com.interview.secessentials.AccessDeniedHandler" />

	<bean id="csrfTokenFilter" class="com.interview.secessentials.CsrfTokenFilter" />

	<bean id="logoutSuccessHandler" class="com.interview.secessentials.LogoutSuccessHandler" />

	<bean id="connectionFactoryLocator"
		class="org.springframework.social.security.SocialAuthenticationServiceRegistry">
		<property name="authenticationServices">
			<list>
				<bean
					class="org.springframework.social.google.security.GoogleAuthenticationService">
					<constructor-arg value="${google.clientId}"/>
					<constructor-arg value="${google.secret}"/>
					<property name="defaultScope" value="https://www.googleapis.com/auth/plus.login https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"/>
				</bean>
			</list>
		</property>
	</bean>
	
	<bean id="socialAuthenticationFilter" class="com.interview.secessentials.SocialAuthFilter"
		c:_0-ref="authenticationManager" c:_1-ref="userIdSource" c:_2-ref="connectionRepository"
		c:_3-ref="connectionFactoryLocator" p:signupUrl="/user/register" p:alwaysUsePostLoginUrl="true"
		p:authenticationSuccessHandler-ref="authSuccessHandler"/>

	<bean id="socialAuthenticationProvider"
		class="org.springframework.social.security.SocialAuthenticationProvider"
		c:_0-ref="connectionRepository" c:_1-ref="socialUserService" />

	<bean id="userIdSource"
		class="org.springframework.social.security.AuthenticationNameUserIdSource" />

	<bean id="connectionRepository"
		class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository"
		c:_0-ref="dataSource" c:_1-ref="connectionFactoryLocator"
		c:_2-ref="textEncryptor" p:connectionSignUp-ref="connectionSignUp"/>
		
	<bean id="connectionSignUp" class="com.interview.secessentials.CustomImplicitSignUp"
		c:_0-ref="userConnectionRepository"
		p:userRepository-ref="userRepository" p:roleRepository-ref="roleRepository"/>
		

	<bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors"
		factory-method="noOpText" />

	<!-- <bean id="connectController" class="org.springframework.social.connect.web.ConnectController" 
		autowire="constructor"/> <bean class="org.springframework.social.connect.jdbc.JdbcConnectionRepository"/> -->

	<bean id="tokenRepository"
		class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"
		p:headerName="X-XSRF-TOKEN" />

</beans>