<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security
     http://www.springframework.org/schema/security/spring-security-4.0.xsd
     http://www.springframework.org/schema/mvc
     http://www.springframework.org/schema/mvc/spring-mvc.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd">
	     
	<sec:http use-expressions="true" entry-point-ref="authEntryPoint">
	    <sec:csrf token-repository-ref="tokenRepository" disabled="true"/>
		<sec:intercept-url pattern="/authentication/logout" access="permitAll"/>
		<sec:intercept-url pattern="/authentication/login" access="permitAll"/>
		<sec:intercept-url pattern="/authentication" access="permitAll"/>
		<sec:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
		<sec:access-denied-handler ref="accessDeniedHandler"/>
		<sec:custom-filter ref="csrfTokenFilter" after="CHANNEL_FILTER" />
		<sec:form-login login-processing-url="/authentication/login"
		     username-parameter="username" password-parameter="password" 
		     authentication-success-handler-ref="authSuccessHandler" 
		     authentication-failure-handler-ref="authFailureHandler" />
		<sec:logout  invalidate-session="true" delete-cookies="JSESSIONID" logout-url="/authentication/logout" success-handler-ref="logoutSuccessHandler" />
	</sec:http>
	
	<sec:authentication-manager>
		<sec:authentication-provider user-service-ref="userService">
			<sec:password-encoder ref="myEncoder"/>
		</sec:authentication-provider>
	</sec:authentication-manager>
	
	<bean id="myEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"
		c:_0="6" />
	
	<!-- <bean id="authFilter" class="com.interview.secessentials.AuthenticationFilter"
		c:_0-ref="authenticationManager" p:authenticationSuccessHandler-ref="authSuccessHandler" p:authenticationFailureHandler-ref="authFailureHandler"/> -->
	
	<bean id="authEntryPoint" class="com.interview.secessentials.AuthEntryPointHandler"/>
	
	<bean id="authSuccessHandler" class="com.interview.secessentials.AuthSuccessHandler"/>
	
	<bean id="authFailureHandler" class="com.interview.secessentials.AuthFailureHandler"/>
	
	<bean id="accessDeniedHandler" class="com.interview.secessentials.AccessDeniedHandler"/>
	
	<bean id="csrfTokenFilter" class="com.interview.secessentials.CsrfTokenFilter"/>
	
	<bean id="logoutSuccessHandler" class="com.interview.secessentials.LogoutSuccessHandler"/>
	
	<bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
	    <property name="connectionFactories">
	        <list>
	            <bean class="org.springframework.social.google.connect.GoogleConnectionFactory">
	                <constructor-arg value="${google.key}"></constructor-arg>
	                <constructor-arg value="${google.secret}"></constructor-arg>
	            </bean>
	        </list>
	    </property>
	</bean>
	
	<bean id="tokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"
	    p:headerName="X-XSRF-TOKEN"/>
	
</beans>